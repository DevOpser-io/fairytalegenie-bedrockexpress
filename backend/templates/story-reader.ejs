<% title = story.title || 'Your Fairytale' %>
<%- include('./partials/favicon') %>

<style nonce="<%= cspNonce %>">
  /* Story History Sidebar Styles */
  .story-sidebar {
    position: fixed;
    top: 0;
    left: -320px;
    width: 320px;
    height: 100vh;
    background: white;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
    transition: left 0.3s ease;
    z-index: 1000;
    overflow-y: auto;
  }
  
  .story-sidebar.active {
    left: 0;
  }
  
  .sidebar-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 999;
  }
  
  .sidebar-overlay.active {
    opacity: 1;
    visibility: visible;
  }
  
  .sidebar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #e2e8f0;
    background: #667eea;
    color: white;
  }
  
  .sidebar-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
  }
  
  .sidebar-close {
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 5px;
    line-height: 1;
  }
  
  .sidebar-content {
    padding: 20px;
  }
  
  .story-group {
    margin-bottom: 30px;
  }
  
  .story-group-header {
    font-size: 0.875rem;
    font-weight: 600;
    color: #718096;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 12px;
  }
  
  .story-item {
    display: block;
    padding: 12px 16px;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    margin-bottom: 8px;
    text-decoration: none;
    color: #2d3748;
    background: white;
    transition: all 0.2s ease;
    cursor: pointer;
  }
  
  .story-item:hover {
    background: #f7fafc;
    border-color: #667eea;
    transform: translateX(2px);
  }
  
  .story-title-sidebar {
    font-weight: 600;
    font-size: 0.95rem;
    margin-bottom: 4px;
    color: #2d3748;
  }
  
  .story-meta {
    font-size: 0.75rem;
    color: #718096;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .story-style-badge {
    background: #e2e8f0;
    color: #4a5568;
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 0.7rem;
    text-transform: capitalize;
  }
  
  .story-style-badge.rhyme {
    background: #fef5e7;
    color: #c05621;
  }
  
  .sidebar-toggle {
    position: fixed;
    top: 20px;
    left: 20px;
    background: #667eea;
    color: white;
    border: none;
    border-radius: 8px;
    padding: 12px 16px;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
    transition: all 0.2s ease;
    z-index: 1001;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
  }
  
  .sidebar-toggle:hover {
    background: #5a67d8;
    transform: translateY(-1px);
  }
  
  .empty-state {
    text-align: center;
    padding: 40px 20px;
    color: #718096;
  }
  
  .empty-state-icon {
    font-size: 3rem;
    margin-bottom: 16px;
    opacity: 0.5;
  }
  
  @media (max-width: 768px) {
    .story-sidebar {
      width: 280px;
      left: -280px;
    }
    
    .sidebar-toggle {
      top: 15px;
      left: 15px;
      padding: 10px 12px;
      font-size: 0.85rem;
    }
  }

  .reader-container {
    max-width: 800px;
    margin: 40px auto;
    padding: 20px;
  }
  
  .story-header {
    text-align: center;
    margin-bottom: 40px;
  }
  
  .story-title {
    font-size: 3rem;
    color: #667eea;
    margin-bottom: 10px;
    font-family: 'Georgia', serif;
  }
  
  .story-meta {
    color: #718096;
    font-size: 1rem;
  }
  
  .story-content {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 40px;
    min-height: 500px;
  }
  
  .story-section {
    display: none;
    animation: fadeIn 0.5s ease-in;
  }
  
  .story-section.active {
    display: block;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .section-image {
    width: 100%;
    max-width: 600px;
    margin: 0 auto 30px;
    display: block;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  .section-text {
    font-size: 1.25rem;
    line-height: 1.8;
    color: #2d3748;
    font-family: 'Georgia', serif;
    text-align: justify;
  }
  
  .section-text.verse {
    text-align: center;
    white-space: pre-line;
    font-style: italic;
    line-height: 2.2;
  }
  
  .story-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 40px;
    padding-top: 20px;
    border-top: 1px solid #e2e8f0;
  }
  
  .nav-button {
    padding: 12px 24px;
    background: #667eea;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .nav-button:hover {
    background: #5a67d8;
    transform: translateY(-1px);
  }
  
  .nav-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
  
  .page-indicator {
    color: #718096;
    font-size: 1rem;
  }
  
  .story-actions {
    display: flex;
    justify-content: center;
    gap: 16px;
    margin-top: 40px;
  }
  
  .action-button {
    padding: 12px 24px;
    background: white;
    color: #667eea;
    border: 2px solid #667eea;
    border-radius: 8px;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 8px;
    text-decoration: none;
  }
  
  .action-button:hover {
    background: #667eea;
    color: white;
  }
  
  .loading-placeholder {
    background: #f7fafc;
    border-radius: 8px;
    height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #718096;
  }
  
  .image-placeholder {
    height: 300px;
  }
  
  .error-message {
    background: #fed7d7;
    color: #c53030;
    padding: 20px;
    border-radius: 8px;
    text-align: center;
  }
  
  @media (max-width: 768px) {
    .story-title {
      font-size: 2rem;
    }
    
    .story-content {
      padding: 20px;
    }
    
    .section-text {
      font-size: 1.1rem;
    }
    
    .story-navigation {
      flex-wrap: wrap;
      gap: 16px;
      justify-content: center;
    }
  }
</style>

<!-- Story History Sidebar Toggle Button -->
<button class="sidebar-toggle" id="sidebar-toggle">
  üìö Library
</button>

<!-- Story History Sidebar Overlay -->
<div class="sidebar-overlay" id="sidebar-overlay"></div>

<!-- Story History Sidebar -->
<div class="story-sidebar" id="story-sidebar">
  <div class="sidebar-header">
    <h2 class="sidebar-title">Library</h2>
    <button class="sidebar-close" id="sidebar-close">&times;</button>
  </div>
  <div class="sidebar-content" id="sidebar-content">
    <div class="empty-state" id="empty-state">
      <div class="empty-state-icon">üìñ</div>
      <p>No stories yet!</p>
      <small>Create your first magical story</small>
    </div>
  </div>
</div>

<div class="reader-container">
  <div class="story-header">
    <h1 class="story-title"><%= story.title %></h1>
    <p class="story-meta">A magical story for age <%= age || '6' %></p>
  </div>
  
  <div class="story-content">
    <% if (story.status === 'generating') { %>
      <div class="loading-placeholder">
        <div>
          <div class="loading-spinner"></div>
          <p>Your story is being created...</p>
        </div>
      </div>
    <% } else if (story.status === 'failed') { %>
      <div class="error-message">
        <p>We encountered an issue creating your story. Please try again.</p>
        <a href="/" class="action-button">Create New Story</a>
      </div>
    <% } else if (story.sections && story.sections.length > 0) { %>
      <% story.sections.forEach((section, index) => { %>
        <div class="story-section <%= index === 0 ? 'active' : '' %>" data-section="<%= index %>">
          <% if (section.imageUrl) { %>
            <img src="<%= section.imageUrl %>" alt="Story illustration" class="section-image" loading="lazy">
          <% } else { %>
            <div class="loading-placeholder image-placeholder">
              <p>Image is being generated...</p>
            </div>
          <% } %>
          <p class="section-text <%= section.text && section.text.split('\n').length > 2 ? 'verse' : '' %>"><%= section.text %></p>
        </div>
      <% }); %>
      
      <div class="story-navigation">
        <button class="nav-button" id="prev-btn" disabled>
          <span>‚Üê</span> Previous
        </button>
        <span class="page-indicator">
          Page <span id="current-page">1</span> of <%= story.sections.length %>
        </span>
        <button class="nav-button" id="next-btn">
          Next <span>‚Üí</span>
        </button>
      </div>
    <% } %>
  </div>
  
  <% if (story.status === 'completed') { %>
    <div class="story-actions">
      <button class="action-button" id="download-pdf-btn">
        üì• Download PDF
      </button>
      <button class="action-button" id="share-story-btn">
        üîó Share Story
      </button>
      <a href="/" class="action-button">
        ‚ú® Create New Story
      </a>
    </div>
  <% } %>
</div>

<script nonce="<%= cspNonce %>">
document.addEventListener('DOMContentLoaded', function() {
  let currentSection = 0;
  const totalSections = <%= story.sections ? story.sections.length : 0 %>;

  function navigateStory(direction) {
    const sections = document.querySelectorAll('.story-section');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const currentPageSpan = document.getElementById('current-page');
    
    // Hide current section
    sections[currentSection].classList.remove('active');
    
    // Update current section
    currentSection += direction;
    
    // Show new section
    sections[currentSection].classList.add('active');
    
    // Update page indicator
    currentPageSpan.textContent = currentSection + 1;
    
    // Update button states
    prevBtn.disabled = currentSection === 0;
    nextBtn.disabled = currentSection === totalSections - 1;
    
    // Scroll to top
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }

  function downloadPDF() {
    // Placeholder for PDF download
    alert('PDF download will be implemented soon!');
  }

  function shareStory() {
    // Copy link to clipboard
    const url = window.location.href;
    navigator.clipboard.writeText(url).then(() => {
      alert('Story link copied to clipboard!');
    }).catch(() => {
      alert('Failed to copy link');
    });
  }
  
  // Add event listeners for navigation buttons
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');
  
  if (prevBtn) {
    prevBtn.addEventListener('click', function() {
      navigateStory(-1);
    });
  }
  
  if (nextBtn) {
    nextBtn.addEventListener('click', function() {
      navigateStory(1);
    });
  }
  
  // Add event listeners for action buttons
  const downloadBtn = document.getElementById('download-pdf-btn');
  const shareBtn = document.getElementById('share-story-btn');
  
  if (downloadBtn) {
    downloadBtn.addEventListener('click', downloadPDF);
  }
  
  if (shareBtn) {
    shareBtn.addEventListener('click', shareStory);
  }
  
  // Auto-refresh if story is still generating
  <% if (story.status === 'generating') { %>
  setTimeout(() => {
    window.location.reload();
  }, 5000);
  <% } %>

  // Story History Sidebar Functionality
  const sidebarToggle = document.getElementById('sidebar-toggle');
  const sidebarOverlay = document.getElementById('sidebar-overlay');
  const storySidebar = document.getElementById('story-sidebar');
  const sidebarClose = document.getElementById('sidebar-close');
  const sidebarContent = document.getElementById('sidebar-content');
  const emptyState = document.getElementById('empty-state');

  // Load story history when sidebar is opened
  async function loadStoryHistory() {
    try {
      const response = await fetch('/api/stories');
      const data = await response.json();
      
      if (data.success && data.stories) {
        renderStoryHistory(data.stories);
      } else {
        showEmptyState();
      }
    } catch (error) {
      console.error('Failed to load story history:', error);
      showEmptyState();
    }
  }

  function renderStoryHistory(groupedStories) {
    const hasStories = Object.values(groupedStories).some(group => group.length > 0);
    
    if (!hasStories) {
      showEmptyState();
      return;
    }

    let html = '';
    
    // Define groups with labels
    const groups = [
      { key: 'today', label: 'Today' },
      { key: 'week', label: 'Previous 7 Days' },
      { key: 'month', label: 'Previous 30 Days' },
      { key: 'older', label: 'Older' }
    ];

    groups.forEach(group => {
      const stories = groupedStories[group.key];
      if (stories && stories.length > 0) {
        html += `<div class="story-group">`;
        html += `<div class="story-group-header">${group.label}</div>`;
        
        stories.forEach(story => {
          const createdDate = new Date(story.created_at).toLocaleDateString();
          html += `
            <div class="story-item" data-story-id="${story.story_id}">
              <div class="story-title-sidebar">${escapeHtml(story.title)}</div>
              <div class="story-meta">
                <span>${story.child_name} ‚Ä¢ Age ${story.child_age} ‚Ä¢ ${createdDate}</span>
                <span class="story-style-badge ${story.story_style}">${story.story_style}</span>
              </div>
            </div>
          `;
        });
        
        html += `</div>`;
      }
    });

    sidebarContent.innerHTML = html;
  }

  function showEmptyState() {
    sidebarContent.innerHTML = `
      <div class="empty-state">
        <div class="empty-state-icon">üìñ</div>
        <p>No stories yet!</p>
        <small>Create your first magical story</small>
      </div>
    `;
  }

  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  function openStory(storyId) {
    window.location.href = `/story/${storyId}`;
  }

  function toggleSidebar() {
    const isActive = storySidebar.classList.contains('active');
    
    if (isActive) {
      storySidebar.classList.remove('active');
      sidebarOverlay.classList.remove('active');
    } else {
      storySidebar.classList.add('active');
      sidebarOverlay.classList.add('active');
      loadStoryHistory(); // Load stories when opening
    }
  }

  // Event listeners for sidebar
  sidebarToggle.addEventListener('click', toggleSidebar);
  sidebarClose.addEventListener('click', toggleSidebar);
  sidebarOverlay.addEventListener('click', toggleSidebar);

  // Handle story item clicks using event delegation
  sidebarContent.addEventListener('click', function(e) {
    const storyItem = e.target.closest('.story-item');
    if (storyItem) {
      const storyId = storyItem.getAttribute('data-story-id');
      if (storyId) {
        openStory(storyId);
      }
    }
  });
});
</script>